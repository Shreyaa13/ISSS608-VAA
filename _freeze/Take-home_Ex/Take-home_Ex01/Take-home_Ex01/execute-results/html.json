{
  "hash": "37c1c1da857bc8517d6a7ae74b0ada8e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1 - Ship Performance in the Gulf of Guinea\"\nauthor: \"Shreya Agarwal\"\ndate: \"February 1, 2025\"\ndate-modified: \"last-modified\"\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  message: false\n  freeze: true\n---\n\n\n\n# **1. Overview**\n\n## 1.1 Setting the scene\n\nThe maritime sector is one of the most critical components of global trade, contributing significantly to economic growth and sustainability. It faces increasing pressure to optimize operations while maintaining safety and environmental standards. The Gulf of Guinea represents a significant maritime region where understanding vessel performance is crucial for operational success, reducing costs, and minimizing environmental impact.\n\n## 1.2 Our task\n\nAs the graphical editor for an international media company, our task is to create insightful and informative visualizations that reveal meaningful patterns in ship performance data. Specifically, we aim to:\n\n1.  Analyze and visualize energy efficiency distributions across different route types and weather conditions\n2.  Examine maintenance patterns across different ship and route types\n3.  Investigate operational cost distributions for various route categories\n4.  Present these findings through clear, compelling visualizations using R's ggplot2 and its extensions\n\nThrough this analysis, we seek to provide actionable insights that could benefit maritime stakeholders in optimizing their operations and making informed decisions about route planning, maintenance scheduling, and cost management.\n\n# **2. Getting Started**\n\n## 2.1 Load packages\n\nThe R packages used in this take-home exercise are:\n\n-   [**tidyverse**](https://www.tidyverse.org/) - (i.e. readr, tidyr, dplyr, ggplot2) A collection of core packages designed for data science, used extensively for data preparation and wrangling.\n-   [**ggthemes**](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) **-** Extra themes, geoms, and scales for ggplot2.\n-   [**patchwork**](https://patchwork.data-imaginist.com/) - For preparing composite figure created using ggplot2.\n-   [**ggridges**](https://cran.r-project.org/web/packages/ggridges/vignettes/introduction.html) - For ridgeline plots that create the impression of a mountain range. They can be useful for visualising changes in distributions over time or space.\n-   [**ggdist**](https://mjskay.github.io/ggdist/) - For visualisations of distributions and uncertainty.\n-   [**plotly**](https://plotly.com/r/) - R library for plotting interactive statistical graphs.\n-   [**corrplot**](https://cran.r-project.org/web/packages/corrplot/index.html). - A graphical display of a correlation matrix or general matrix.\n\nThe code chunk below uses the `p_load()` function in the **pacman** package to check if the packages are installed in the computer. If yes, they are then loaded into the R environment. If no, they are installed, and then loaded into the R environment.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggthemes, patchwork, \n               ggridges, ggdist, plotly,\n               corrplot)\n```\n:::\n\n\n\n## 2.2 Import the data\n\nThe dataset (*data/Ship_Performance_Dataset.csv*) used in the exercise is the Ship Performance in the Gulf of Guinea retrieved from kaggle - [Ship Performance Clustering Dataset](https://www.kaggle.com/datasets/jeleeladekunlefijabi/ship-performance-clustering-dataset/data).\n\nThe code chunk below imports *ship_data.csv* into R environment by using [*read_csv()*](https://readr.tidyverse.org/reference/read_delim.html) function of [**readr**](https://readr.tidyverse.org/) package. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Reading the data into R environment\nship_data <- read_csv(\"data/Ship_Performance_Dataset.csv\") \n```\n:::\n\n\n\n# **3. Data Overview**\n\nUsing the `glimpse()` function, we see that the dataset consists of 2736 rows and 18 columns, with features categorized into numerical and categorical types. It also shows the column names, column type, and the first few entries of each column.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(ship_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,736\nColumns: 18\n$ Date                    <date> 2023-06-04, 2023-06-11, 2023-06-18, 2023-06-2…\n$ Ship_Type               <chr> \"Container Ship\", \"Fish Carrier\", \"Container S…\n$ Route_Type              <chr> \"None\", \"Short-haul\", \"Long-haul\", \"Transocean…\n$ Engine_Type             <chr> \"Heavy Fuel Oil (HFO)\", \"Steam Turbine\", \"Dies…\n$ Maintenance_Status      <chr> \"Critical\", \"Good\", \"Fair\", \"Fair\", \"Fair\", \"F…\n$ Speed_Over_Ground_knots <dbl> 12.59756, 10.38758, 20.74975, 21.05510, 13.742…\n$ Engine_Power_kW         <dbl> 2062.9840, 1796.0574, 1648.5567, 915.2618, 108…\n$ Distance_Traveled_nm    <dbl> 1030.9436, 1060.4864, 658.8741, 1126.8225, 144…\n$ Draft_meters            <dbl> 14.132284, 14.653083, 7.199261, 11.789063, 9.7…\n$ Weather_Condition       <chr> \"Moderate\", \"Rough\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       <dbl> 1959.0179, 162.3947, 178.0409, 1737.3853, 260.…\n$ Operational_Cost_USD    <dbl> 483832.35, 483388.00, 448543.40, 261349.61, 28…\n$ Revenue_per_Voyage_USD  <dbl> 292183.27, 883765.79, 394018.75, 87551.38, 676…\n$ Turnaround_Time_hours   <dbl> 25.86708, 63.24820, 49.41815, 22.40911, 64.158…\n$ Efficiency_nm_per_kWh   <dbl> 1.4551789, 0.2903614, 0.4995945, 0.7029057, 1.…\n$ Seasonal_Impact_Score   <dbl> 1.4156533, 0.8856478, 1.4058132, 1.3707043, 0.…\n$ Weekly_Voyage_Count     <dbl> 1, 6, 9, 1, 8, 7, 3, 6, 8, 2, 9, 4, 3, 7, 7, 3…\n$ Average_Load_Percentage <dbl> 93.76925, 93.89537, 96.21824, 66.19370, 80.008…\n```\n\n\n:::\n:::\n\n\n\n## 3.1 Check for duplicates\n\nUsing the `duplicated` function, we see that there are **no** duplicate entries in the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data[duplicated(ship_data),]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 18\n# ℹ 18 variables: Date <date>, Ship_Type <chr>, Route_Type <chr>,\n#   Engine_Type <chr>, Maintenance_Status <chr>, Speed_Over_Ground_knots <dbl>,\n#   Engine_Power_kW <dbl>, Distance_Traveled_nm <dbl>, Draft_meters <dbl>,\n#   Weather_Condition <chr>, Cargo_Weight_tons <dbl>,\n#   Operational_Cost_USD <dbl>, Revenue_per_Voyage_USD <dbl>,\n#   Turnaround_Time_hours <dbl>, Efficiency_nm_per_kWh <dbl>,\n#   Seasonal_Impact_Score <dbl>, Weekly_Voyage_Count <dbl>, …\n```\n\n\n:::\n:::\n\n\n\n## 3.2 Check and handle missing values\n\nWe run below code to check for missing values and no output is generated indicating **no** missing values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(column_name in names(ship_data)) {\n  na_count <- sum(is.na(ship_data[[column_name]]))\n\n  if (na_count > 0) {\n    message(\"Column '\", column_name, \"' has \", na_count, \" NA values.\")\n  }\n}\n```\n:::\n\n\n\nNow, that we are done with the basic pre-processing steps, since we don't want to further modify our dataset, we will start with the Exploratory Data Analysis.\n\n# **4. Exploratory Data Analysis (EDA)**\n\nBefore conducting EDA, we first examined the correlation between numerical variables to understand their relationships and guide our visualization strategy as can be seen below -\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumeric_columns <- sapply(ship_data, is.numeric) # Identify numeric columns\nship.cor <- cor(ship_data[, numeric_columns]) # Compute correlation\n\noptions(repr.plot.width = 10, repr.plot.height = 10)  \ncorrplot(ship.cor, \n         type = \"lower\", \n         tl.cex = 0.7)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nThe correlation matrix, as depicted in the figure, reveals that there is no strong correlation among the numerical variables. Most correlations are extremely weak - close to zero, indicating minimal linear relationships between these features.\n\nGiven this insight, we will **not** focus on visualizing numerical relationships, as they do not provide meaningful patterns. Instead, our analysis will shift towards exploring categorical variables or combinations of categorical and numerical attributes to derive more insightful trends in ship performance.\n\nThis approach ensures that our visualizations remain relevant and data-driven, helping us extract the most valuable insights from the dataset.\n\n**Note -** For our visualizations, we will be filtering out the \"None\" category for all categorical variables since they won't be adding much value to our insights.\n\n## **4.1 Ship Performance and Maintenance Trends**\n\n### 4.1.1 Engine Type Preferences across different Route Types\n\n::: panel-tabset\n## The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-c640317e5f987dfb7f6c\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c640317e5f987dfb7f6c\">{\"x\":{\"data\":[{\"orientation\":\"v\",\"width\":0.89999999999999991,\"base\":0,\"x\":[1],\"y\":[209],\"text\":\"209\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Diesel\",\"legendgroup\":\"Diesel\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":0.89999999999999991,\"base\":0,\"x\":[1],\"y\":[232],\"text\":\"232\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Diesel\",\"legendgroup\":\"Diesel\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":0.89999999999999991,\"base\":0,\"x\":[1],\"y\":[207],\"text\":\"207\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Diesel\",\"legendgroup\":\"Diesel\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":0.89999999999999991,\"base\":0,\"x\":[1],\"y\":[202],\"text\":\"202\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(248,118,109,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Diesel\",\"legendgroup\":\"Diesel\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":0.90000000000000013,\"base\":0,\"x\":[2],\"y\":[203],\"text\":\"203\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,186,56,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Heavy Fuel Oil (HFO)\",\"legendgroup\":\"Heavy Fuel Oil (HFO)\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":0.90000000000000013,\"base\":0,\"x\":[2],\"y\":[205],\"text\":\"205\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,186,56,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Heavy Fuel Oil (HFO)\",\"legendgroup\":\"Heavy Fuel Oil (HFO)\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":0.90000000000000013,\"base\":0,\"x\":[2],\"y\":[207],\"text\":\"207\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,186,56,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Heavy Fuel Oil (HFO)\",\"legendgroup\":\"Heavy Fuel Oil (HFO)\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":0.90000000000000013,\"base\":0,\"x\":[2],\"y\":[189],\"text\":\"189\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(0,186,56,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Heavy Fuel Oil (HFO)\",\"legendgroup\":\"Heavy Fuel Oil (HFO)\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":0.90000000000000036,\"base\":0,\"x\":[3],\"y\":[193],\"text\":\"193\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(97,156,255,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Steam Turbine\",\"legendgroup\":\"Steam Turbine\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":0.90000000000000036,\"base\":0,\"x\":[3],\"y\":[224],\"text\":\"224\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(97,156,255,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Steam Turbine\",\"legendgroup\":\"Steam Turbine\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":0.90000000000000036,\"base\":0,\"x\":[3],\"y\":[184],\"text\":\"184\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(97,156,255,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Steam Turbine\",\"legendgroup\":\"Steam Turbine\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"orientation\":\"v\",\"width\":0.90000000000000036,\"base\":0,\"x\":[3],\"y\":[219],\"text\":\"219\",\"type\":\"bar\",\"textposition\":\"none\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(97,156,255,1)\",\"line\":{\"width\":1.8897637795275593,\"color\":\"transparent\"}},\"name\":\"Steam Turbine\",\"legendgroup\":\"Steam Turbine\",\"showlegend\":false,\"xaxis\":\"x2\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":55.452054794520549,\"r\":7.3059360730593621,\"b\":90.206926303947924,\"l\":43.105022831050235},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"title\":{\"text\":\"Distribution of Ships by Engine Type (Faceted by Route Type)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":17.534246575342465},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,0.49592302674494454],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,3.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"Diesel\",\"Heavy Fuel Oil (HFO)\",\"Steam Turbine\"],\"tickvals\":[1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"Diesel\",\"Heavy Fuel Oil (HFO)\",\"Steam Turbine\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-45,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y2\",\"title\":\"\",\"hoverformat\":\".2f\"},\"annotations\":[{\"text\":\"Engine Type\",\"x\":0.5,\"y\":0,\"showarrow\":false,\"ax\":0,\"ay\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xref\":\"paper\",\"yref\":\"paper\",\"textangle\":-0,\"xanchor\":\"center\",\"yanchor\":\"top\",\"annotationType\":\"axis\",\"yshift\":-71.942086121299496},{\"text\":\"Count of Ships\",\"x\":0,\"y\":0.5,\"showarrow\":false,\"ax\":0,\"ay\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724},\"xref\":\"paper\",\"yref\":\"paper\",\"textangle\":-90,\"xanchor\":\"right\",\"yanchor\":\"center\",\"annotationType\":\"axis\",\"xshift\":-27.762557077625573},{\"text\":\"Coastal\",\"x\":0.24796151337247227,\"y\":1,\"showarrow\":false,\"ax\":0,\"ay\":0,\"font\":{\"color\":\"rgba(26,26,26,1)\",\"family\":\"\",\"size\":11.68949771689498},\"xref\":\"paper\",\"yref\":\"paper\",\"textangle\":-0,\"xanchor\":\"center\",\"yanchor\":\"bottom\"},{\"text\":\"Long-haul\",\"x\":0.7520384866275277,\"y\":1,\"showarrow\":false,\"ax\":0,\"ay\":0,\"font\":{\"color\":\"rgba(26,26,26,1)\",\"family\":\"\",\"size\":11.68949771689498},\"xref\":\"paper\",\"yref\":\"paper\",\"textangle\":-0,\"xanchor\":\"center\",\"yanchor\":\"bottom\"},{\"text\":\"Short-haul\",\"x\":0.24796151337247227,\"y\":0.48515981735159819,\"showarrow\":false,\"ax\":0,\"ay\":0,\"font\":{\"color\":\"rgba(26,26,26,1)\",\"family\":\"\",\"size\":11.68949771689498},\"xref\":\"paper\",\"yref\":\"paper\",\"textangle\":-0,\"xanchor\":\"center\",\"yanchor\":\"bottom\"},{\"text\":\"Transoceanic\",\"x\":0.7520384866275277,\"y\":0.48515981735159819,\"showarrow\":false,\"ax\":0,\"ay\":0,\"font\":{\"color\":\"rgba(26,26,26,1)\",\"family\":\"\",\"size\":11.68949771689498},\"xref\":\"paper\",\"yref\":\"paper\",\"textangle\":-0,\"xanchor\":\"center\",\"yanchor\":\"bottom\"}],\"yaxis\":{\"domain\":[0.51484018264840181,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-11.600000000000001,243.59999999999999],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"50\",\"100\",\"150\",\"200\"],\"tickvals\":[0,50,100,150,200],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"50\",\"100\",\"150\",\"200\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":\"\",\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.49592302674494454,\"y0\":0.51484018264840181,\"y1\":1},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.49592302674494454,\"y0\":0,\"y1\":23.37899543378996,\"yanchor\":1,\"ysizemode\":\"pixel\"},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0.5040769732550554,\"x1\":1,\"y0\":0.51484018264840181,\"y1\":1},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0.5040769732550554,\"x1\":1,\"y0\":0,\"y1\":23.37899543378996,\"yanchor\":1,\"ysizemode\":\"pixel\"},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.49592302674494454,\"y0\":0,\"y1\":0.48515981735159819},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":0.49592302674494454,\"y0\":0,\"y1\":23.37899543378996,\"yanchor\":0.48515981735159819,\"ysizemode\":\"pixel\"},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0.5040769732550554,\"x1\":1,\"y0\":0,\"y1\":0.48515981735159819},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0.5040769732550554,\"x1\":1,\"y0\":0,\"y1\":23.37899543378996,\"yanchor\":0.48515981735159819,\"ysizemode\":\"pixel\"}],\"xaxis2\":{\"type\":\"linear\",\"autorange\":false,\"range\":[0.40000000000000002,3.6000000000000001],\"tickmode\":\"array\",\"ticktext\":[\"Diesel\",\"Heavy Fuel Oil (HFO)\",\"Steam Turbine\"],\"tickvals\":[1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"Diesel\",\"Heavy Fuel Oil (HFO)\",\"Steam Turbine\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-45,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"domain\":[0.5040769732550554,1],\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"y2\",\"title\":\"\",\"hoverformat\":\".2f\"},\"yaxis2\":{\"type\":\"linear\",\"autorange\":false,\"range\":[-11.600000000000001,243.59999999999999],\"tickmode\":\"array\",\"ticktext\":[\"0\",\"50\",\"100\",\"150\",\"200\"],\"tickvals\":[0,50,100,150,200],\"categoryorder\":\"array\",\"categoryarray\":[\"0\",\"50\",\"100\",\"150\",\"200\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":3.6529680365296811,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.68949771689498},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"domain\":[0,0.48515981735159819],\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176002,\"zeroline\":false,\"anchor\":\"x\",\"title\":\"\",\"hoverformat\":\".2f\"},\"showlegend\":true,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.68949771689498},\"title\":{\"text\":\"Engine Type\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.611872146118724}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"6a4c573767b7\":{\"x\":{},\"fill\":{},\"text\":{},\"type\":\"bar\"}},\"cur_data\":\"6a4c573767b7\",\"visdat\":{\"6a4c573767b7\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtering the dataset \nship_data_filtered <- ship_data %>% \n  filter(Engine_Type != \"None\", Route_Type != \"None\")\n\np <- ggplot(ship_data_filtered, \n       aes(x = Engine_Type, fill = Engine_Type)) +\n  geom_bar(position = \"dodge\", aes(text = after_stat(count))) +\n  facet_wrap(~Route_Type) +   # Separate plots for each Route Type\n  theme_minimal() +\n  labs(title = \"Distribution of Ships by Engine Type (Faceted by Route Type)\", \n       x = \"Engine Type\", \n       y = \"Count of Ships\", \n       fill = \"Engine Type\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Convert to an interactive plot with hover tooltips\nggplotly(p, tooltip = \"text\")\n```\n:::\n\n\n:::\n\n**Insights -**\n\n-   The number of ships for each engine type appears relatively **consistent** across the four route types (Coastal, Short-haul, Long-haul, Transoceanic).\n-   **Diesel and HFO-powered ships dominate** across all routes, indicating their preference in most shipping operations.\n-   However, **Steam Turbine usage is relatively higher in Long-haul and Transoceanic routes**, suggesting that these engines might be better suited for extended voyages.\n\n### 4.1.2 Maintenance Status Insights across Ship and Route Types\n\n::: panel-tabset\n## The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter dataset for Ship Type (removing 'None')\nship_data_filtered1 <- ship_data %>% \n  filter(Maintenance_Status != \"None\", Ship_Type != \"None\")\n\n# First bar chart (Ship Type vs. Maintenance Status)\np1 <- ggplot(ship_data_filtered1, aes(x = Ship_Type, fill = Maintenance_Status)) +\n  geom_bar(position = \"dodge\", width = 0.6) +  \n  theme_minimal(base_size = 12) +  \n  labs(title = \"by Ship Type\", \n       x = \"Ship Type\", \n       y = \"Ship Count\") +  \n  theme(\n    axis.text.x = element_text(angle = 20, hjust = 1, size = 10),  \n    legend.position = \"top\",  \n    legend.text = element_text(size = 8), \n    legend.title = element_text(size = 9)  \n  )\n\n# Filter dataset for Route Type (removing 'None')\nship_data_filtered2 <- ship_data %>% \n  filter(Maintenance_Status != \"None\", Route_Type != \"None\")\n\n# Second bar chart (Route Type vs. Maintenance Status)\np2 <- ggplot(ship_data_filtered2, aes(x = Route_Type, fill = Maintenance_Status)) +\n  geom_bar(position = \"dodge\", width = 0.6) +  \n  theme_minimal(base_size = 12) +  \n  labs(title = \"by Route Type\", \n       x = \"Route Type\", \n       y = \"Ship Count\") +  \n  theme(\n    axis.text.x = element_text(angle = 20, hjust = 1, size = 10), \n    legend.position = \"none\"  # Hide legend from second plot (since it's shared)\n  )\n\n# Arrange the plots properly\nfinal_plot <- (p1 | p2) +  \n  plot_layout(widths = c(1.2, 1)) +  \n  plot_annotation(\n    title = \"Comparison of Ships on Maintenance Status\",\n    theme = theme(plot.title = element_text(size = 16, face = \"bold\"))\n  )\n\n# Display the final adjusted plot\nprint(final_plot)\n```\n:::\n\n\n:::\n\n**Insights -**\n\n-   **By Ship Type:**\n\n    -   **Fish Carriers** seem to be performing the best, with a **higher proportion of ships in \"Good\"** condition.\n    -   **Container Ships and Bulk Carriers** have more ships in \"Critical\" condition, indicating higher maintenance needs or susceptibility to operational stress.\n    -   **Tanker ships** also appear to be well-maintained, with fewer ships in critical condition.\n\n-   **By Route Type:**\n\n    -   **Short-haul and Transoceanic routes** have a **higher number of ships in \"Critical\"** condition, suggesting that extreme voyage lengths (either short or long) lead to more wear and tear.\n    -   **Long-haul routes** have a similar number of critical ships but also a higher number of well-maintained ships, indicating other influencing factors such as weather conditions.\n    -   **Coastal ships** seem to have the **best overall maintenance status**, possibly due to easier access to regular servicing.\n\n## **4.2 Financial Performance Across Operational and Maintenance Factors**\n\n### 4.2.1 Operational Cost Patterns Across Different Route Types\n\n::: panel-tabset\n## The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtering out \"None\" values\nship_data_filtered <- ship_data %>%\n  filter(Route_Type != \"None\")\n\n# Creating the faceted histograms with density curves\nggplot(ship_data_filtered, \n       aes(x = Operational_Cost_USD)) +\n  geom_histogram(aes(y = ..density..), \n                 bins = 30, \n                 fill = \"steelblue\", \n                 color = \"black\", \n                 alpha = 0.6) +  # Histogram bars\n  geom_density(color = \"red\", \n               linewidth = 1.2, \n               adjust = 1.2) +  # Density curve\n  facet_wrap(~Route_Type, scales = \"free\") +  # Separate plots for each Route_Type\n  theme_minimal() +\n  labs(title = \"Operational Cost Distribution by Route Type\",\n       x = \"Operational Cost (USD)\", \n       y = \"Density\") +\n  theme(legend.position = \"none\")  # No need for legend in faceted charts\n```\n:::\n\n\n:::\n\n**Insights -**\n\n-   The histogram bars (blue) represent the frequency of operational costs, while the red line shows the density distribution. **All route types show a fairly spread-out distribution** of operational costs, indicating no extreme outliers.\n\n-   **Short-haul routes** exhibit a uniform distribution, indicating relatively stable operational cost patterns. **Long-haul routes** show multiple peaks in cost distribution, suggesting that additional factors (such as fuel prices or route-specific expenses) may influence cost variability.\n\n-   **Coastal routes** have a slightly left-skewed distribution, meaning that most ships operate at lower operational costs, likely due to shorter voyages and lower fuel consumption whereas **Transoceanic routes** have a higher density of ships in mid-to-high operational cost levels, confirming that these voyages tend to be the most expensive.\n\n### 4.2.2 Impact of Maintenance Status on Profitability\n\n::: panel-tabset\n## The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n## The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtering out \"None\" values and calculating profit\nship_data_filtered <- ship_data %>%\n  filter(Maintenance_Status != \"None\") %>%\n  mutate(Profit = Revenue_per_Voyage_USD - Operational_Cost_USD)  # Compute Profit\n\nggplot(ship_data_filtered, \n       aes(x = Profit, color = Maintenance_Status)) +  \n  geom_density(linewidth = 1.2, adjust = 1.2) +  # Density curves\n  theme_minimal() +\n  labs(title = \"Profit Distributions by Maintenance Status\",\n       x = \"Profit (Revenue - Cost) in USD\", \n       y = \"Density\",\n       color = \"Maintenance Status\") +  \n  theme(legend.position = \"right\")  \n```\n:::\n\n\n:::\n\n**Insights -**\n\n-   The graph shows overlapping probability density distributions of **profit (revenue - cost) across different maintenance statuses** (Critical, Fair, and Good). The **bell-shaped distribution** indicates that most profits are centered around a **peak range**, with fewer ships experiencing extreme profits or losses.\n-   **Ships in \"Good\" maintenance condition** (blue) have the highest peak, indicating that most well-maintained ships achieve a stable and predictable profit margin. **Ships in \"Fair\" condition** (green) follow a similar pattern but with slightly lower profit peaks, suggesting that maintenance quality plays a role in financial performance.\n-   **Ships in \"Critical\" condition** (red) exhibit a slightly widest spread on the right, with profits varying significantly. Some of these ships perform well, but it has the lowest profit peak amongst the 3.\n-   The **left tail of the distribution** indicates that some ships operate at a loss, regardless of their maintenance condition, highlighting potential inefficiencies in fleet management.\n\n## **4.3 Efficiency Distribution Across Different Weather Conditions** \n\n### 4.3.1 Efficiency in Calm Weather by Route Type\n\n::: panel-tabset\n## The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n## The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtering the dataset \nship_data_filtered <- ship_data %>% \n  filter(Weather_Condition == \"Calm\", Route_Type != \"None\")\n\n# Ridgeline Plot \nggplot(ship_data_filtered, \n       aes(x = Efficiency_nm_per_kWh, \n           y = Route_Type)) +\n  geom_density_ridges(fill = \"lightblue\", alpha = 0.8, scale = 1.2) +  \n  theme_minimal() + \n  labs(title = \"Energy Efficiency Distribution by Route Type (Calm Weather)\", \n       x = \"Efficiency (nm per kWh)\", \n       y = \"Route Type\") +\n  theme(legend.position = \"none\")  \n```\n:::\n\n\n:::\n\n**Insights -**\n\n-   This ridgeline plot illustrates the energy efficiency distribution (nm/kWh) across different route types in calm weather. **Transoceanic routes** exhibit the widest spread, with peaks around **0.6** (lower efficiency, possibly due to difficult segments) and **1.3** (optimal efficiency, likely aided by favorable currents). **Short-haul routes** have a more concentrated distribution in comparison, with a lower peak near **0.4**, potentially due to start-up delays or congestion, and a dominant peak at **1.1 nm/kWh**, indicating typical cruising efficiency.\n\n-   **Long-haul routes** display **two peaks at 0.5 and 1.3**, suggesting varying efficiency regimes—lower during cargo operations and higher during uninterrupted cruising. **Coastal routes** show the **least variability**, with peaks around **0.6 and 1.2**, indicating **more stable and predictable conditions**. Overall, the efficiency ranges generally overlap across all route types, suggesting some commonality in operational parameters.\n\n### 4.3.2 Efficiency in Moderate Weather by Route Type\n\n::: panel-tabset\n## The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtering the dataset for relevant weather conditions & route types\nship_data_filtered <- ship_data %>% \n  filter(Weather_Condition == \"Moderate\", Route_Type != \"None\")\n\n# Ridgeline Plot\nggplot(ship_data_filtered, \n       aes(x = Efficiency_nm_per_kWh, \n           y = Route_Type)) +\n  geom_density_ridges(fill = \"lightblue\", alpha = 0.8, scale = 1.2) + \n  theme_minimal() + \n  labs(title = \"Energy Efficiency Distribution by Route Type (Moderate Weather)\", \n       x = \"Efficiency (nm per kWh)\", \n       y = \"Route Type\") +\n  theme(legend.position = \"none\")  \n```\n:::\n\n\n:::\n\n**Insights -**\n\n-   **Transoceanic routes** show a more consolidated distribution with a dominant peak around **0.8 nm/kWh**, suggesting that moderate weather conditions may normalize efficiency levels across the route. **Short-haul routes** display a relatively **consistent density between 0.4-0.8 nm/kWh**, indicating more uniform operating conditions despite weather changes.\n\n-   **Long-haul routes** exhibit a prominent peak around **0.5-0.6 nm/kWh**, suggesting that moderate weather conditions might push efficiency towards the lower end of the spectrum. **Coastal routes** show a distinctive peak near **0.9 nm/kWh**, with a more symmetrical distribution compared to calm weather conditions.\n\n-   Unlike the bimodal trends seen in calm weather, moderate conditions tend to consolidate efficiency distributions, likely due to standardized operational adjustments made for such weather.\n\n### 4.3.3 Efficiency in Rough Weather by Route Type\n\n::: panel-tabset\n## The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n## The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtering the dataset\nship_data_filtered <- ship_data %>% \n  filter(Weather_Condition == \"Rough\", Route_Type != \"None\")\n\n# Ridgeline Plot\nggplot(ship_data_filtered, \n       aes(x = Efficiency_nm_per_kWh, \n           y = Route_Type)) +\n  geom_density_ridges(fill = \"lightblue\", alpha = 0.8, scale = 1.2) +\n  theme_minimal() + \n  labs(title = \"Energy Efficiency Distribution by Route Type (Rough Weather)\", \n       x = \"Efficiency (nm per kWh)\", \n       y = \"Route Type\") +\n  theme(legend.position = \"none\")  \n```\n:::\n\n\n:::\n\n**Insights -**\n\n-   **Transoceanic routes** maintain a relatively **stable density until a notable peak around 1.4 nm/kWh**, suggesting that despite rough conditions, these vessels can achieve high efficiency in certain segments. **Short-haul routes** demonstrate **multiple small peaks, particularly at 0.6 and 1.3 nm/kWh**, indicating varying efficiency levels possibly due to different operational phases or route segments in rough weather.\n\n-   **Long-haul routes** show **higher density in the 0.2-0.7 nm/kWh range**, suggesting that rough weather conditions significantly impact their efficiency, pushing it towards the lower end of the spectrum. **Coastal routes** exhibit **dense distribution in the 0.2-0.6 nm/kWh range** with **another small peak around 1.3 nm/kWh**, indicating that while rough weather generally reduces efficiency, some coastal operations can still achieve higher efficiency levels in specific conditions.\n\n### 4.3.4 Efficiency Across Weather Conditions by Ship Type\n\n::: panel-tabset\n## The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n## The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtering the dataset \nship_data_filtered <- ship_data %>% \n  filter(Ship_Type != \"None\", Weather_Condition != \"None\")\n\n# Ridgeline Plot for all weather conditions\nggplot(ship_data_filtered, \n       aes(x = Efficiency_nm_per_kWh, \n           y = Ship_Type, \n           fill = Weather_Condition)) +  # Color fill based on Weather Condition\n  geom_density_ridges(alpha = 0.8, scale = 1.2) +  \n  facet_wrap(~Weather_Condition) +  # Separate plots for each Weather Condition\n  theme_minimal() + \n  labs(title = \"Efficiency Distribution by Ship Type Across Weather Conditions\", \n       x = \"Efficiency (nm per kWh)\", \n       y = \"Route Type\",\n       fill = \"Weather Condition\") +\n  theme(legend.position = \"bottom\") \n```\n:::\n\n\n:::\n\n**Insights -**\n\n**Efficiency Patterns Across Weather Conditions:**\n\n-   **Calm Weather (Red):** Efficiency distributions are more spread out, with some ships achieving higher efficiency (1.5+ nm per kWh).\n-   **Moderate Weather (Green):** The distributions narrow slightly, indicating more consistency in efficiency but with a peak shift towards the mid-range (0.6 - 1.0 nm per kWh).\n-   **Rough Weather (Blue):** Efficiency drops further, with fewer ships reaching high efficiency levels, and peaks shifting toward lower efficiency values.\n\n**Ship Type-Specific Observations:**\n\n-   **Tankers** appear to be the least resistant to rough weather, generally maintaining moderate efficiency levels across all conditions.\n-   **Fish Carriers** surprisingly exhibit a low efficiency peak in calm weather and overall achieve only moderate efficiency levels across conditions.\n-   **Container Ships and Bulk Carriers** follow a similar trend, achieving high efficiency in calm weather but experiencing efficiency losses as conditions worsen—though not as severe as Tankers.\n\n# **5. Summary and Conclusion**\n\nThe visualizations provided insights into ship performance, maintenance trends, financial patterns, and energy efficiency across various route types and weather conditions.\n\n1.  **Ship Performance and Maintenance Trends:** Different ship types exhibit varying maintenance conditions, with Fish Carriers generally in better condition, while Container Ships and Bulk Carriers have more vessels in critical states. Route type also plays a role, as short-haul and transoceanic voyages show higher maintenance concerns, whereas coastal routes tend to have better-maintained ships.\n\n2.  **Financial Performance Across Operations:** Operational costs vary by route type, with coastal routes generally having lower expenses and transoceanic routes experiencing higher costs. Maintenance condition correlates with profitability, as well-maintained ships tend to achieve more stable financial performance, while ships in critical condition exhibit a wider range of profit outcomes.\n\n3.  **Energy Efficiency Across Weather Conditions:** Efficiency distributions shift based on weather conditions, with calm weather allowing for higher efficiency levels, while rough weather reduces overall performance. Different route types and ship types respond differently to these conditions, with transoceanic vessels showing broader efficiency variations and certain ship categories experiencing more pronounced efficiency declines in rough conditions.\n\nThe analysis highlights notable patterns in ship performance, maintenance needs, cost distributions, and efficiency variations. While no strong correlations were found between numerical variables, categorical attributes such as ship type, route type, and weather conditions played a significant role in shaping operational outcomes. These insights provide a clearer understanding of how different factors impact maritime efficiency, financial performance, and maintenance trends.\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}